<?xml version="1.0" encoding="UTF-8"?>
<project default="dist" name="pdimaices">

  <target name="init">
      <property name="source.dir" value="src" />
	  
  	  <!--Directorio de la base de datos -->
  	  <property name="bd.dir" value="bd" />
  	
  	  <!--Iconos de la aplicacion -->
  	  <property name="img.dir" value="img" />
  	
      <!-- The base directory for all libraries (jar) files -->
      <property name="lib.home" value="lib" />

  	  <!-- name of the output .jar file -->
      <property name="jar.name" value="pdimaices.jar" />
    
      <!-- base directory for distribution target -->
      <property name="dist.home" value="dist" />
    
      <!-- base directory for compilation targets -->
      <property name="build.home" value="target" />

      <!-- Main class -->
      <property name="main.class" value="aplicarFiltros.ImageEditorPanel" />

   </target>

   <target name="clean" depends="init">
      <deltree dir="${build.home}" />
   </target>

   <target name="prepare" depends="clean">
      <mkdir dir="${build.home}/classes" />
      
      <path id="class.path">
         <fileset dir="${lib.home}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
         </fileset>
      </path>
   </target>

   <target name="compile" depends="prepare">
     <javac srcdir="${source.dir}" destdir="${build.home}/classes" source="1.5">
            <classpath refid="class.path"/>
     </javac>
   	<copy todir="${build.home}/classes">
   	    <fileset dir="${source.dir}">
   	      <include name="**/*.xml"/>
   	      <include name="**/*.properties"/>
   	      <include name="**/*.png"/>
   	      <include name="**/*.gif"/>
   	    </fileset>
   	</copy>
   </target>

  <target name="jar" depends="compile" description="Create jar and MANIFEST.MF">
 
    <!-- create a property containing all .jar files, prefix lib/, and seperated with a space -->
    <pathconvert property="libs.project" pathsep=" ">
      <mapper>
        <chainedmapper>

          <!-- remove absolute path -->
          <flattenmapper />
   
          <!-- add lib/ prefix -->
          <globmapper from="*" to="lib/*" />
        </chainedmapper>
      </mapper>
   
      <path>
   
        <!-- lib.home contains all jar files, in several subdirectories -->
        <fileset dir="${lib.home}">
          <include name="**/*.jar" />
        </fileset>
      </path>
    </pathconvert>
   
    <!-- create the jar -->
    <jar jarfile="${build.home}/${jar.name}" basedir="${build.home}/classes">
   
      <!-- define MANIFEST.MF -->
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Main-Class" value="${main.class}" />
        <section name="common">
          <attribute name="Specification-Title" value="${component.name}" />
          <attribute name="Specification-Version" value="${component.version}" />
          <attribute name="Specification-Vendor" value="${component.vendor}" />
          <attribute name="Implementation-Title" value="${component.name}" />
          <attribute name="Implementation-Version" value="${component.version} ${TODAY}" />
          <attribute name="Implementation-Vendor" value="${component.vendor}" />
        </section>
   
        <!-- finally, use the magically generated libs path -->
        <attribute name="Class-Path" value="${libs.project}" />
      </manifest>
    </jar>
  </target>
  
  <target name="dist" depends="jar" description="Create binary distribution">
    <delete dir="${dist.home}" />

    <!-- contains all library dependencies -->
    <mkdir dir="${dist.home}/lib" />
   
    <copy todir="${dist.home}" file="${build.home}/${jar.name}" />
   
    <copy todir="${dist.home}/lib" filtering="off">
   
      <!-- remove the directory hierarchy: lib contains no subdirectories -->
      <flattenmapper />
      <fileset dir="${lib.home}" includes="**/*.jar" />
    </copy>
  	
  	<mkdir dir="${dist.home}/img" />
  	
  	<copy todir="${dist.home}/img" filtering="off">
      <fileset dir="${img.dir}" includes="**/*.*" />
    </copy>

  	<copy todir="${dist.home}/bd" filtering="off">
      <fileset dir="${bd.dir}" includes="**/*.*" />
    </copy>

  	<mkdir dir="${dist.home}/image" />
  	
  	<copy todir="${dist.home}" file="runPdiMaices.bat" />
  	
  	<delete dir="${build.home}" />
  </target>  

</project>